<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Order Management System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background: #f4f4f4;
            padding: 0;
        }

        .title-bar {
            background: #f06;
            color: white;
            padding: 15px;
            text-align: center;
            font-size: 1.8rem;
        }

        nav {
            background: #333;
            color: white;
            padding: 10px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        nav a {
            color: white;
            text-decoration: none;
            font-size: 1.2rem;
            transition: color 0.3s;
        }

        nav a:hover {
            color: #ffba00;
        }

        .container {
            padding: 20px;
            margin-top: 60px;
            text-align: center;
        }

        h1,
        h2 {
            margin-bottom: 20px;
        }

        .product-list {
            display: flex;
            flex-wrap: wrap;
            gap: 20px;
            justify-content: center;
            margin-top: 30px;
        }

        .product-item {
            background: white;
            border: 1px solid #ddd;
            border-radius: 10px;
            padding: 15px;
            text-align: center;
            width: 220px;
            box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
        }

        button {
            padding: 8px 15px;
            background: #f06;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }

        button:hover {
            background: #ffba00;
        }

        .cart {
            margin-top: 30px;
            padding: 15px;
            background: white;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
        }

        .cart-table {
            width: 100%;
            border-collapse: collapse;
        }

        .cart-table th,
        .cart-table td {
            padding: 10px;
            text-align: center;
            border: 1px solid #ddd;
        }

        .cart-total {
            margin-top: 20px;
            font-size: 1.5rem;
        }

        .loading {
            font-size: 1.2rem;
            color: #ffba00;
            text-align: center;
            margin-top: 20px;
        }
    </style>
</head>

<body>
    <div class="title-bar">Order Management System</div>
    <div class="container">
        <h2>Available Products</h2>
        <div id="loadingMessage" class="loading">Loading products...</div>
        <div class="product-list" id="productList"></div>
    </div>
    <div class="container cart">
        <h3>Shopping Cart</h3>
        <table class="cart-table" id="cartTable">
            <thead>
                <tr>
                    <th>Product</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
        <div class="cart-total" id="cartTotal">Total: $0.00</div>
        <button id="placeOrderButton" onclick="placeOrder()">Place Order</button>
    </div>
    <script>
        let cart = [];

        function loadProducts() {
            fetch('products.xml')
                .then(response => response.text())
                .then(xml => {
                    const products = new DOMParser().parseFromString(xml, 'application/xml').getElementsByTagName('product');
                    const productList = document.getElementById('productList');
                    const loadingMessage = document.getElementById('loadingMessage');
                    loadingMessage.style.display = 'none';

                    if (products.length === 0) {
                        productList.innerHTML = 'No products available.';
                        return;
                    }

                    Array.from(products).forEach(product => {
                        const name = product.querySelector('name').textContent;
                        const price = parseFloat(product.querySelector('price').textContent);
                        const productItem = document.createElement('div');
                        productItem.classList.add('product-item');
                        productItem.innerHTML = `
                            <h3>${name}</h3>
                            <p>$${price.toFixed(2)}</p>
                            <button onclick="addToCart('${name}', ${price})">Add to Cart</button>
                        `;
                        productList.appendChild(productItem);
                    });
                })
                .catch(error => {
                    console.error('Error loading products:', error);
                    document.getElementById('loadingMessage').textContent = 'Failed to load products.';
                });
        }

        function addToCart(name, price) {
            const existingProduct = cart.find(item => item.name === name);
            if (existingProduct) {
                existingProduct.quantity++;
            } else {
                cart.push({ name, price, quantity: 1 });
            }
            updateCart();
        }

        function updateCart() {
            const cartTable = document.getElementById('cartTable').getElementsByTagName('tbody')[0];
            const cartTotal = document.getElementById('cartTotal');
            cartTable.innerHTML = '';
            let total = 0;

            cart.forEach((product, index) => {
                const row = cartTable.insertRow();
                row.innerHTML = `
                    <td>${product.name}</td>
                    <td>${product.quantity}</td>
                    <td>$${product.price.toFixed(2)}</td>
                    <td>$${(product.price * product.quantity).toFixed(2)}</td>
                    <td><button onclick="removeFromCart(${index})">Remove</button></td>
                `;
                total += product.price * product.quantity;
            });

            cartTotal.textContent = `Total: $${total.toFixed(2)}`;
        }

        function removeFromCart(index) {
            cart.splice(index, 1);
            updateCart();
        }

        function placeOrder() {
            if (cart.length === 0) {
                alert('Your cart is empty!');
                return;
            }

            const orderDetails = cart.map(item =>
                `${item.name} (x${item.quantity}) - $${(item.price * item.quantity).toFixed(2)}`
            ).join('\n');

            const total = cart.reduce((sum, item) => sum + (item.price * item.quantity), 0);

            alert(`Order placed:\n\n${orderDetails}\n\nTotal: $${total.toFixed(2)}`);

            cart = [];
            updateCart();
        }

        window.onload = loadProducts;
    </script>
</body>

</html>
------------------------------------------------------------------------------------------------------------------------------------------------------------------

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Book Movie Tickets</title>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background: #f4f9ff;
        }

        header {
            background-color: #005f8d;
            color: white;
            padding: 15px 0;
            text-align: center;
        }

        nav {
            background-color: #007bb5;
            padding: 10px;
            text-align: center;
        }

        nav a {
            color: white;
            text-decoration: none;
            padding: 10px 20px;
            margin: 0 10px;
            border-radius: 5px;
        }

        nav a:hover {
            background-color: #004c6d;
        }

        .container {
            max-width: 800px;
            margin: 30px auto;
            padding: 20px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        select,
        input,
        button {
            width: 100%;
            padding: 10px;
            margin-bottom: 15px;
            font-size: 1rem;
            border-radius: 5px;
            border: 1px solid #ddd;
        }

        button {
            background-color: #007bb5;
            color: white;
            cursor: pointer;
            border: none;
        }

        button:hover {
            background-color: #005f8d;
        }

        table {
            width: 100%;
            margin-top: 20px;
            border-collapse: collapse;
        }

        table th,
        table td {
            padding: 8px;
            text-align: left;
            border: 1px solid #ddd;
        }

        table th {
            background-color: #e0f3ff;
        }
    </style>
</head>

<body>
    <header>
        <h1>Movie Ticket Booking</h1>
    </header>
    <nav><a href="add movie.html">Add Movie</a></nav>
    <div class="container">
        <h2>Book Movie Tickets</h2>
        <label for="movie">Select Movie:</label>
        <select id="movie" onchange="loadMovieDetails()">
            <option value="">-- Select Movie --</option>
        </select>
        <div id="movieDetails" style="display: none;">
            <p><strong>Price: </strong><span id="moviePrice"></span></p>
            <label for="seats">Seats:</label>
            <input type="number" id="seats" min="1">
            <button onclick="bookTicket()">Book Ticket</button>
        </div>
        <h2>Booked Movies</h2>
        <table id="bookedMoviesTable" style="display: none;">
            <thead>
                <tr>
                    <th>Title</th>
                    <th>Seats</th>
                    <th>Total Price</th>
                </tr>
            </thead>
            <tbody></tbody>
        </table>
    </div>
    <script>
        let moviesXML = '', bookingsXML = '';
        window.onload = () => { loadMovies(); loadBookedMovies(); };

        function loadMovies() {
            fetch('movies.xml')
                .then(res => res.text())
                .then(data => {
                    moviesXML = data;
                    populateMoviesDropdown();
                });
        }

        function populateMoviesDropdown() {
            const xmlDoc = new DOMParser().parseFromString(moviesXML, "application/xml");
            const movies = xmlDoc.getElementsByTagName("movie");
            const movieSelect = document.getElementById("movie");
            Array.from(movies).forEach((movie, index) => {
                const title = movie.getElementsByTagName("title")[0].textContent;
                const option = document.createElement("option");
                option.value = index;
                option.textContent = title;
                movieSelect.appendChild(option);
            });
        }

        function loadMovieDetails() {
            const selectedMovieIndex = document.getElementById("movie").value;
            if (!selectedMovieIndex) {
                document.getElementById("movieDetails").style.display = "none";
                return;
            }
            const xmlDoc = new DOMParser().parseFromString(moviesXML, "application/xml");
            const movie = xmlDoc.getElementsByTagName("movie")[selectedMovieIndex];
            const price = movie.getElementsByTagName("price")[0].textContent;
            document.getElementById("moviePrice").textContent = `$${price}`;
            document.getElementById("movieDetails").style.display = "block";
        }

        function bookTicket() {
            const movieSelect = document.getElementById("movie");
            const selectedMovieIndex = movieSelect.value;
            const seats = document.getElementById("seats").value;

            if (!selectedMovieIndex || seats <= 0) {
                alert("Please select a movie and valid number of seats.");
                return;
            }

            const xmlDoc = new DOMParser().parseFromString(moviesXML, "application/xml");
            const movie = xmlDoc.getElementsByTagName("movie")[selectedMovieIndex];
            const title = movie.getElementsByTagName("title")[0].textContent;
            const price = movie.getElementsByTagName("price")[0].textContent;
            const totalPrice = price * seats;

            // Update bookingsXML in memory (not saved to file)
            bookingsXML += `
                <booking>
                    <title>${title}</title>
                    <seats>${seats}</seats>
                    <total>${totalPrice}</total>
                </booking>
            `;

            alert("Ticket booked!");
            displayBookedMovies(); // show updated list
            document.getElementById("bookedMoviesTable").style.display = "block";
        }

        function loadBookedMovies() {
            fetch('bookings.xml')
                .then(res => res.text())
                .then(data => {
                    bookingsXML = data;
                    displayBookedMovies();
                });
        }

        function displayBookedMovies() {
            const xmlDoc = new DOMParser().parseFromString(bookingsXML, "application/xml");
            const bookings = xmlDoc.getElementsByTagName("booking");
            const tbody = document.getElementById("bookedMoviesTable").getElementsByTagName("tbody")[0];
            tbody.innerHTML = "";

            Array.from(bookings).forEach(booking => {
                const title = booking.getElementsByTagName("title")[0].textContent;
                const seats = booking.getElementsByTagName("seats")[0].textContent;
                const total = booking.getElementsByTagName("total")[0].textContent;

                const row = document.createElement("tr");
                row.innerHTML = `<td>${title}</td><td>${seats}</td><td>$${total}</td>`;
                tbody.appendChild(row);
            });
        }
    </script>
</body>

</html>
-----------------------------------------------------------------------------------------------------------------------------------------------------------------

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Student Information</title>
    <style>
        body {
            font-family: 'Arial', sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f1f8ff;
            color: #333;
        }

        h1 {
            text-align: center;
            background: linear-gradient(to right, #0288d1, #03a9f4);
            color: white;
            padding: 20px;
            font-size: 2.5rem;
            border-bottom: 2px solid #0288d1;
            text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
        }

        #search-box {
            width: 50%;
            padding: 12px;
            margin: 20px auto;
            font-size: 1.1em;
            border: 2px solid #0288d1;
            border-radius: 30px;
            background-color: white;
            display: block;
            outline: none;
            transition: 0.3s;
        }

        #search-box:focus {
            border-color: #03a9f4;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);
        }

        #student-data {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 30px;
            padding: 20px;
        }

        .student-card {
            background-color: white;
            border: 1px solid #0288d1;
            border-radius: 15px;
            padding: 25px;
            width: 280px;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
            opacity: 0.9;
            transition: 0.3s;
        }

        .student-card:hover {
            transform: translateY(-10px);
            box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
            opacity: 1;
        }

        .student-card h2 {
            font-size: 1.6em;
            color: #0288d1;
            margin-bottom: 15px;
            font-weight: bold;
            text-align: center;
        }

        .student-card .label {
            font-weight: bold;
            color: #0288d1;
        }

        .student-info a {
            color: #0288d1;
            text-decoration: none;
        }

        .student-info a:hover {
            text-decoration: underline;
        }

        @media (max-width: 768px) {
            #search-box {
                width: 80%;
            }

            .student-card {
                width: 100%;
            }
        }
    </style>
</head>

<body>

    <h1>Student Information</h1>
    <input type="text" id="search-box" placeholder="Search by Name..." oninput="filterStudents()">
    <div id="student-data"></div>

    <script>
        const xmlFile = 'students.xml';
        let studentsData = [];

        fetch(xmlFile)
            .then(response => response.text())
            .then(str => new window.DOMParser().parseFromString(str, 'text/xml'))
            .then(xmlDoc => {
                const students = xmlDoc.getElementsByTagName("student");
                const container = document.getElementById("student-data");
                let html = "";

                Array.from(students).forEach(student => {
                    const usn = student.getElementsByTagName("usn")[0]?.textContent || "N/A";
                    const name = student.getElementsByTagName("name")[0]?.textContent || "Unknown";
                    const college = student.getElementsByTagName("college")[0]?.textContent || "N/A";
                    const branch = student.getElementsByTagName("branch")[0]?.textContent || "N/A";
                    const year = student.getElementsByTagName("year_of_joining")[0]?.textContent || "N/A";
                    const email = student.getElementsByTagName("email")[0]?.textContent || "N/A";

                    studentsData.push({ name, usn, college, branch, year, email });

                    html += `
                        <div class="student-card" data-name="${name.toLowerCase()}">
                            <h2>${name}</h2>
                            <p><span class="label">USN:</span> ${usn}</p>
                            <p><span class="label">College:</span> ${college}</p>
                            <p><span class="label">Branch:</span> ${branch}</p>
                            <p><span class="label">Year:</span> ${year}</p>
                            <p><span class="label">Email:</span> <a href="mailto:${email}">${email}</a></p>
                        </div>
                    `;
                });

                container.innerHTML = html;
            })
            .catch(err => {
                console.error("Failed to load XML:", err);
                document.getElementById("student-data").innerHTML = "<p style='color:red;'>Failed to load student data.</p>";
            });

        function filterStudents() {
            const query = document.getElementById("search-box").value.toLowerCase();
            document.querySelectorAll('.student-card').forEach(card => {
                card.style.display = card.getAttribute('data-name').includes(query) ? 'block' : 'none';
            });
        }
    </script>

</body>

</html>
